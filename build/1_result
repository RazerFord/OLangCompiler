Class           [0, 5) "class"
Space           [5, 6) " "
Identifier      [6, 11) "Hello"
Space           [11, 12) " "
Is              [12, 14) "is"
NewLine         [14, 15) "\n"
Space           [15, 16) " "
Space           [16, 17) " "
Var             [17, 20) "var"
Space           [20, 21) " "
Identifier      [21, 22) "i"
Space           [22, 23) " "
Colon           [23, 24) ":"
Space           [24, 25) " "
Identifier      [25, 32) "Integer"
LBracket        [32, 33) "("
IntegerLiteral  [33, 35) "42"
RBracket        [35, 36) ")"
NewLine         [36, 37) "\n"
Space           [37, 38) " "
Space           [38, 39) " "
Var             [39, 42) "var"
Space           [42, 43) " "
Identifier      [43, 44) "j"
Space           [44, 45) " "
Colon           [45, 46) ":"
Space           [46, 47) " "
Identifier      [47, 51) "Real"
LBracket        [51, 52) "("
RealLiteral     [52, 55) "0"
RBracket        [55, 56) ")"
NewLine         [56, 57) "\n"
Space           [57, 58) " "
Space           [58, 59) " "
Var             [59, 62) "var"
Space           [62, 63) " "
Identifier      [63, 64) "k"
Space           [64, 65) " "
Colon           [65, 66) ":"
Space           [66, 67) " "
BooleanLiteral  [67, 71) "true"

NewLine         [71, 72) "\n"
NewLine         [72, 73) "\n"
Space           [73, 74) " "
Space           [74, 75) " "
This            [75, 79) "this"
LBracket        [79, 80) "("
RBracket        [80, 81) ")"
Space           [81, 82) " "
Is              [82, 84) "is"
NewLine         [84, 85) "\n"
Space           [85, 86) " "
Space           [86, 87) " "
End             [87, 90) "end"
NewLine         [90, 91) "\n"
End             [91, 94) "end"
NewLine         [94, 95) "\n"
