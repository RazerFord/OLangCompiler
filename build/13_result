Class           [0, 5) "class"
Space           [5, 6) " "
Identifier      [6, 15) "Fibonacci"
Space           [15, 16) " "
Is              [16, 18) "is"
NewLine         [18, 19) "\n"
Space           [19, 20) " "
Space           [20, 21) " "
Method          [21, 27) "method"
Space           [27, 28) " "
Identifier      [28, 37) "calculate"
LBracket        [37, 38) "("
Identifier      [38, 39) "n"
Colon           [39, 40) ":"
Space           [40, 41) " "
Identifier      [41, 48) "Integer"
RBracket        [48, 49) ")"
Colon           [49, 50) ":"
Space           [50, 51) " "
Identifier      [51, 58) "Integer"
Space           [58, 59) " "
Is              [59, 61) "is"
NewLine         [61, 62) "\n"
Space           [62, 63) " "
Space           [63, 64) " "
Space           [64, 65) " "
Space           [65, 66) " "
Identifier      [66, 68) "if"
Space           [68, 69) " "
LBracket        [69, 70) "("
Identifier      [70, 71) "n"
Dot             [71, 72) "."
Identifier      [72, 76) "Less"
LBracket        [76, 77) "("
IntegerLiteral  [77, 78) "0"
RBracket        [78, 79) ")"
RBracket        [79, 80) ")"
Space           [80, 81) " "
Then            [81, 85) "then"
Space           [85, 86) " "
Return          [86, 92) "return"
Space           [92, 93) " "
Unknown         [93, 94) "-"
IntegerLiteral  [94, 95) "1"
Space           [95, 96) " "
End             [96, 99) "end"
NewLine         [99, 100) "\n"
Space           [100, 101) " "
Space           [101, 102) " "
Space           [102, 103) " "
Space           [103, 104) " "
Identifier      [104, 106) "if"
Space           [106, 107) " "
LBracket        [107, 108) "("
Identifier      [108, 109) "n"
Dot             [109, 110) "."
Identifier      [110, 115) "Equal"
LBracket        [115, 116) "("
IntegerLiteral  [116, 117) "0"
RBracket        [117, 118) ")"
RBracket        [118, 119) ")"
Space           [119, 120) " "
Then            [120, 124) "then"
Space           [124, 125) " "
Return          [125, 131) "return"
Space           [131, 132) " "
IntegerLiteral  [132, 133) "0"
Space           [133, 134) " "
End             [134, 137) "end"
NewLine         [137, 138) "\n"
Space           [138, 139) " "
Space           [139, 140) " "
Space           [140, 141) " "
Space           [141, 142) " "
Identifier      [142, 144) "if"
Space           [144, 145) " "
LBracket        [145, 146) "("
Identifier      [146, 147) "n"
Dot             [147, 148) "."
Identifier      [148, 153) "Equal"
LBracket        [153, 154) "("
IntegerLiteral  [154, 155) "1"
RBracket        [155, 156) ")"
RBracket        [156, 157) ")"
Space           [157, 158) " "
Then            [158, 162) "then"
Space           [162, 163) " "
Return          [163, 169) "return"
Space           [169, 170) " "
IntegerLiteral  [170, 171) "1"
Space           [171, 172) " "
End             [172, 175) "end"
NewLine         [175, 176) "\n"
NewLine         [176, 177) "\n"
Space           [177, 178) " "
Space           [178, 179) " "
Space           [179, 180) " "
Space           [180, 181) " "
Return          [181, 187) "return"
Space           [187, 188) " "
This            [188, 192) "this"
Dot             [192, 193) "."
Identifier      [193, 202) "calculate"
LBracket        [202, 203) "("
Identifier      [203, 204) "n"
Space           [204, 205) " "
Unknown         [205, 206) "-"
Space           [206, 207) " "
IntegerLiteral  [207, 208) "1"
RBracket        [208, 209) ")"
Space           [209, 210) " "
Unknown         [210, 211) "+"
Space           [211, 212) " "
This            [212, 216) "this"
Dot             [216, 217) "."
Identifier      [217, 226) "calculate"
LBracket        [226, 227) "("
Identifier      [227, 228) "n"
Space           [228, 229) " "
Unknown         [229, 230) "-"
Space           [230, 231) " "
IntegerLiteral  [231, 232) "2"
RBracket        [232, 233) ")"
NewLine         [233, 234) "\n"
Space           [234, 235) " "
Space           [235, 236) " "
End             [236, 239) "end"
NewLine         [239, 240) "\n"
End             [239, 242) "end"
